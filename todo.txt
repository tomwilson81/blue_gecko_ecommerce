GOAL:
- Online Store with Products and People (Users) who can buy products. - Ecommerce Store Clone
Features:
- Home Page with Products and Categories
- Detail Page for each Product
- Shopping Cart
- Checkout Page with Payment
- User Auth (Register, Login, Profile View)
- Products and Categories
- Protected Views / Permissions - Guest and User see and can do different things
- Contact Page
- Product Reviews + Recomendation system
- Q&A Page
- Privacy Page
- Filter / Search functionality
- Fake Data Generator

*additional features::
- reports

Superuser admin: tomwilson
Password:  admin123

Technologies:
- Django + SqlLite + BASIC FRONTEND (BOOTSTRAP) + crispy forms - https://startbootstrap.com/templates/ecommerce/

Steps:
1.Create Github Repository, venv and .gitignore, - DONE
2. Install Django and create project! - DONE
3. Create apps - users / products / orders - DONE
4. create models (plan database) !!!!!!!!!!!!!:
    4.1 Products app models:
        - Product:
            - name - DONE
            - category (FK to Category) - DONE
            - description - DONE
            - photo - DONE
            - price- DONE

        - Category:
            - name - DONE

        - Review: - STILL TO DO
            - user
            - rating
            - comment
            - date_posted
            - product

    4.2 Orders app models:
        - SinglePartOfOrder:
            - product - DONE
            - quantity_of_product - DONE
            - full_order (FK to FullOrder) - please doublecheck!!! - DONE
        - FullOrder:
            - user - DONE
            - date


5. Views and Templates....
    5.1 Homepage with Category and Product Listing (views, templates and urls) - DONE
    5.2 Detail Page for Product - DONE
    5.3 User Registration and Login and Detail - DONE
    5.4 Cart implementation - DONE
    5.5 Filters and Search and Sort implementation and Dummy Data Script Generator
    5.6 Checkout page - DONE
    5.7 User Detail History of orders
    5.8 About / Privacy etc


STILL TO DO:
1. Sign up page and logout page HTML - DONE
2. Default address - ensure only 1 billing and 1 shipping default allowable - DONE
3. Checkout page - auto populate address fields when default selected
4. Update homepage carousel
5. New user registered - shouldn't have any default address associated - DONE
6. Fix payment page - use default card and saving card returning Invalid Parameters
7. Secret JSON file for Stripe API key and Django key
8. User Reviews
9.